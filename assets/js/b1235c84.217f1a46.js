"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6629],{2722:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=n(4848),o=n(8453);const i={sidebar_label:"system",title:"utils.system"},a=void 0,r={id:"python/utils/system",title:"utils.system",description:"find\\available\\tcp\\_port",source:"@site/docs/python/utils/system.md",sourceDirName:"python/utils",slug:"/python/utils/system",permalink:"/OpenDevin/docs/python/utils/system",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{sidebar_label:"system",title:"utils.system"}},l={},c=[{value:"find_available_tcp_port",id:"find_available_tcp_port",level:4}];function p(t){const e={code:"code",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h4,{id:"find_available_tcp_port",children:"find_available_tcp_port"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"def find_available_tcp_port() -> int\n"})}),"\n",(0,s.jsx)(e.p,{children:"Find an available TCP port, return -1 if none available."})]})}function d(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(p,{...t})}):p(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>r});var s=n(6540);const o={},i=s.createContext(o);function a(t){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),s.createElement(i.Provider,{value:e},t.children)}}}]);