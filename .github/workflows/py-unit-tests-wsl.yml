name: Run Python Unit Tests on WSL

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  test-on-wsl:
    name: Python Unit Tests on WSL
    runs-on: windows-latest
    env:
      INSTALL_DOCKER: '0'  # Set to '0' to skip Docker installation
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup WSL
        uses: Vampire/setup-wsl@v3
        with:
          distribution: Ubuntu-22.04
          update: true
          additional-packages: python3-pip python3-venv make curl
      
      - name: Set up Python in WSL
        shell: wsl-bash {0}
        run: |
          # Update package list and install software-properties-common
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          
          # Install Python 3.12 from deadsnakes PPA
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt-get update
          sudo apt-get install -y python3.12 python3.12-venv python3.12-dev python3.12-distutils python3.12-pip
          
          # Create symlinks for python3.12
          sudo ln -sf /usr/bin/python3.12 /usr/local/bin/python3
          sudo ln -sf /usr/bin/python3.12 /usr/local/bin/python
          sudo ln -sf /usr/bin/pip3.12 /usr/local/bin/pip3
          sudo ln -sf /usr/bin/pip3.12 /usr/local/bin/pip
          
          # Install pipx and poetry
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          python3 -m pipx install poetry
          
          # Add local bin to PATH
          export PATH="$HOME/.local/bin:$PATH"
          echo "PATH=$PATH" >> $GITHUB_ENV
      
      - name: Install Python dependencies using Poetry
        shell: wsl-bash {0}
        run: poetry install --without evaluation,llama-index
      
      - name: Build Environment
        shell: wsl-bash {0}
        run: make build
      
      - name: Run Tests
        shell: wsl-bash {0}
        run: poetry run pytest --forked --cov=openhands --cov-report=xml -svv ./tests/unit --ignore=tests/unit/test_memory.py
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}